{"ast":null,"code":"import _objectSpread from\"C:/Users/wk789/Documents/school/UU/dialogue/lab5/react-xstate-colourchanger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{send,assign,actions}from\"xstate\";import\"./styles.scss\";const cancel=actions.cancel;function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}function promptAndAsk(prompt,s_prompt){return{initial:\"prompt\",states:{prompt:{entry:say(prompt),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},maxspeech:_objectSpread({},speech(s_prompt)),ask:{entry:[listen(),send('MAXSPEECH',{delay:2500})]}}};}function help(prompt,name){return{entry:say(prompt),on:{ENDSPEECH:name+\".hist\"}};}function speech(prompt){return{entry:say(prompt),on:{ENDSPEECH:\"ask\"}};}const grammar={\"John\":{person:\"John Smith\"},\"Smith\":{person:\"Smith John\"},\"Tom\":{person:\"Tom Smith\"},\"David\":{person:\"David Smith\"},\"Emma\":{person:\"Emma James\"},\"Eric\":{person:\"Eric James\"},\"Alex\":{person:\"Alex James\"},\"on Friday\":{day:\"Friday\"},\"on friday\":{day:\"Friday\"},\"at one\":{time:\"01:00\"},\"at two\":{time:\"02:00\"},\"at three\":{time:\"03:00\"},\"at four\":{time:\"04:00\"},\"at five\":{time:\"05:00\"},\"at six\":{time:\"06:00\"},\"at seven\":{time:\"07:00\"},\"at eight\":{time:\"08:00\"},\"at nine\":{time:\"09:00\"},\"at ten\":{time:\"10:00\"},\"at eleven\":{time:\"11:00\"},\"at twelve\":{time:\"12:00\"},\"at thirteen\":{time:\"13:00\"},\"at fourteen\":{time:\"14:00\"},\"at fifteen\":{time:\"15:00\"},\"at sixteen\":{time:\"16:00\"},\"at seventeen\":{time:\"17:00\"},\"at eighteen\":{time:\"18:00\"},\"at nineteen\":{time:\"19:00\"},\"at twenty\":{time:\"20:00\"},\"at twenty one\":{time:\"21:00\"},\"at twenty two\":{time:\"22:00\"},\"at twenty three\":{time:\"23:00\"},\"at twenty four\":{time:\"00:00\"}};const grammar2={\"yes\":true,\"Yes\":true,\"Of course\":true,\"of course\":true,\"No\":false,\"no\":false,\"No way\":false,\"no way\":false};const commands={\"help\":\"h\",\"Help\":\"H\"};const grammar3={\"count\":0};export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:{initial:\"prompt\",on:{RECOGNISED:[{target:\"query\",cond:context=>!(context.recResult in commands),actions:[assign(context=>{return{option:context.recResult};}),assign(context=>{grammar3[\"count\"]=0;})]},{target:\"help1\",cond:context=>context.recResult in commands,actions:cancel(\"maxsp\")}],MAXSPEECH:[{target:\".maxspeech\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"What would you like to do?\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},maxspeech:_objectSpread({},speech(\"Please respond. What would you like to do?\")),ask:{entry:[listen(),send('MAXSPEECH',{delay:2500})]}}},help1:_objectSpread({},help(\"Tell me what you want to do.\",\"welcome\")),query:{invoke:{id:\"rasa\",src:(context,event)=>nluRequest(context.option),onDone:{target:\"menu\",actions:[assign((context,event)=>{return{option:event.data.intent.name};}),(context,event)=>console.log(event.data)]//actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n},onError:{target:\"welcome\",actions:(context,event)=>console.log(event.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:\"todo\",cond:context=>context.option===\"todo\"},{target:\"timer\",cond:context=>context.option===\"timer\"},{target:\"appointment\",cond:context=>context.option===\"appointment\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. You chose \".concat(context.option,\".\")}))},nomatch:{entry:say(\"Sorry, please repeat again.\"),on:{ENDSPEECH:\"prompt\"}}}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\\"s create a to do item\"}))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\\"s create a timer\"}))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\\"s create an appointment\"}))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:[assign(context=>{return{person:grammar[context.recResult].person};}),assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")],target:\"day\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help2\",cond:context=>context.recResult in commands,actions:cancel(\"maxsp\")}],MAXSPEECH:[{target:\".maxspeech\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:2500,id:\"maxsp\"})]},maxspeech:_objectSpread({},speech(\"Please respond, Who are you meeting with?\")),nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},help2:_objectSpread({},help(\"Please tell me the name of the person you are meeting with.\",\"who\")),day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:[assign(context=>{return{day:grammar[context.recResult].day};}),assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")],target:\"wholeday\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help3\",cond:context=>context.recResult in commands,actions:cancel(\"maxsp\")}],MAXSPEECH:[{target:\".maxspeech\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. You are meeting \".concat(context.person,\" for the meeting. On which day is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:2500,id:\"maxsp\"})]},maxspeech:_objectSpread({},speech(\"Please respond. Which day is your meeting?\")),nomatch:{entry:say(\"Sorry I don't know which day are you talking about\"),on:{ENDSPEECH:\"prompt\"}}}},help3:_objectSpread({},help(\"Please tell me which day your meeting is.\",\"day\")),wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"notime\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{cond:context=>grammar2[context.recResult]===false,target:\"whattime\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help4\",cond:context=>context.recResult in commands,actions:cancel(\"maxsp\")}],MAXSPEECH:[{target:\".maxspeech\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Good.on \".concat(context.day,\". Will it take the whole day?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:2500,id:\"maxsp\"})]},maxspeech:_objectSpread({},speech(\"Please respond.\")),nomatch:{entry:say(\"Please answer the question.\"),on:{ENDSPEECH:\"prompt\"}}}},help4:_objectSpread({},help(\"Please answer the question with yer or no.\",\"wholeday\")),notime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"Finished\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{cond:context=>grammar2[context.recResult]===false,target:\"who\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help5\",cond:context=>context.recResult in commands,actions:cancel(\"maxsp\")}],MAXSPEECH:[{target:\".maxspeech\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Good. Do you want to me create an appointment with \".concat(context.person,\" on \").concat(context.day,\"for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:2500,id:\"maxsp\"})]},maxspeech:_objectSpread({},speech(\"Please respond. Confirm the meeting schedule.\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help5:_objectSpread({},help(\"Just confirm it\",\"notime\")),whattime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:[assign(context=>{return{time:grammar[context.recResult].time};}),assign(context=>{grammar3[\"count\"]=0;})],target:\"withtime\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help6\",cond:context=>context.recResult in commands,actions:cancel(\"maxsp\")}],MAXSPEECH:[{target:\".maxspeech\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"What time is your meeting\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:2500,id:\"maxsp\"})]},maxspeech:_objectSpread({},speech(\"Please respond. What time is your meeting?\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help6:_objectSpread({},help(\"Please tell me what time your meeting is.\",\"whattime\")),withtime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"Finished\",actions:assign(context=>{grammar3[\"count\"]=0;})},{cond:context=>grammar2[context.recResult]===false,target:\"who\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help7\",cond:context=>context.recResult in commands,actions:cancel(\"maxsp\")}],MAXSPEECH:[{target:\".maxspeech\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Good. Do you want to me create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:2500,id:\"maxsp\"})]},maxspeech:_objectSpread({},speech(\"Please confirm the meeting schedule.\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help7:_objectSpread({},help(\"Please confirm the meeting schedule\",\"withtime\")),Finished:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Your appointment has been created!\")}}}}};/* RASA API\n *  */const proxyurl=\"https://cors-anywhere.herokuapp.com/\";const rasaurl=\"https://appointment--app.herokuapp.com/model/parse\";const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:\"POST\",headers:{\"Origin\":\"http://localhost:3000/react-xstate-colourchanger\"},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());","map":{"version":3,"sources":["C:/Users/wk789/Documents/school/UU/dialogue/lab5/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","actions","cancel","say","text","_context","type","value","listen","promptAndAsk","prompt","s_prompt","initial","states","entry","on","ENDSPEECH","hist","maxspeech","speech","ask","delay","help","name","grammar","person","day","time","grammar2","commands","grammar3","dmMachine","init","CLICK","welcome","RECOGNISED","target","cond","context","recResult","option","MAXSPEECH","help1","query","invoke","id","src","event","nluRequest","onDone","data","intent","console","log","onError","menu","nomatch","todo","timer","appointment","who","help2","help3","wholeday","help4","notime","help5","whattime","help6","withtime","help7","Finished","proxyurl","rasaurl","fetch","Request","method","headers","body","then","json"],"mappings":"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","sourcesContent":["import { MachineConfig, send, Action, assign, actions} from \"xstate\";\nimport \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { inspect } from \"@xstate/inspect\";\n\nconst {cancel}=actions\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nfunction promptAndAsk(prompt: string, s_prompt:string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: \"prompt\",\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            hist : {type: \"history\"},\n            maxspeech: {\n                ...speech(s_prompt)\n            },\n            ask: {\n                entry: [listen(), send('MAXSPEECH', {delay: 2500})]\n            },\n        }})\n}\n\n\nfunction help(prompt: string, name: string): MachineConfig<SDSContext, any, SDSEvent>{\n    return ({entry: say(prompt),\n             on: {ENDSPEECH: name+\".hist\" }})\n}\n\nfunction speech(prompt: string): MachineConfig<SDSContext, any, SDSEvent>{\n    return ({entry: say(prompt),\n             on: {ENDSPEECH: \"ask\"\n            }})\n}\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } } = {\n    \"John\": { person: \"John Smith\" },\n    \"Smith\": { person: \"Smith John\" },\n    \"Tom\": { person: \"Tom Smith\" },\n    \"David\": { person: \"David Smith\" },\n    \"Emma\": { person: \"Emma James\" },\n    \"Eric\": { person: \"Eric James\" },\n    \"Alex\": { person: \"Alex James\" },\n\n    \"on Friday\": { day: \"Friday\" },\n    \"on friday\": { day: \"Friday\" },\n\t\n\t\"at one\" : { time: \"01:00\" },\n    \"at two\" : { time: \"02:00\" },\n    \"at three\" : { time: \"03:00\"},\n    \"at four\": { time: \"04:00\" },\n    \"at five\": { time: \"05:00\" },\n    \"at six\": { time: \"06:00\" },\n    \"at seven\": { time: \"07:00\" },\n    \"at eight\": { time: \"08:00\" },\n    \"at nine\": { time: \"09:00\" },\n    \"at ten\": { time: \"10:00\" },\n    \"at eleven\": { time: \"11:00\" },\n    \"at twelve\": { time: \"12:00\" },\n    \"at thirteen\": { time: \"13:00\" },\n    \"at fourteen\": { time: \"14:00\" },\n    \"at fifteen\": { time: \"15:00\" },\n    \"at sixteen\": { time: \"16:00\" },\n    \"at seventeen\": { time: \"17:00\" },\n    \"at eighteen\": { time: \"18:00\" },\n    \"at nineteen\": { time: \"19:00\" },\n    \"at twenty\": { time: \"20:00\" },\n    \"at twenty one\": { time: \"21:00\" },\n    \"at twenty two\": { time: \"22:00\" },\n    \"at twenty three\": { time: \"23:00\" },\n    \"at twenty four\": { time: \"00:00\" }\n}\n\n\nconst grammar2 : { [index: string]: boolean }= { \n                  \"yes\": true,\n                  \"Yes\": true,\n\t\t\t\t  \"Of course\": true,\n                  \"of course\": true, \n\t\t\t\t  \"No\": false,\n\t\t\t\t  \"no\" : false,\n\t\t\t\t  \"No way\": false,\n\t\t\t\t  \"no way\" : false\n}\nconst commands = {\"help\": \"h\", \"Help\": \"H\"}\n\nconst grammar3 ={\"count\": 0}\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n\t\twelcome: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    target: \"query\",\n                    cond: (context) => !(context.recResult in commands),\n                    actions: [assign((context) => { return { option: context.recResult } }),assign((context) => { grammar3[\"count\"]=0})],\n                },\n\n                {target: \"help1\",\n                cond: (context) => context.recResult in commands, actions: cancel(\"maxsp\") }],\n\n                MAXSPEECH: [{\n                    target:\".maxspeech\",\n                    cond: (context) => grammar3[\"count\"] <= 2,\n                    actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                    },\n                    {target: \"#root.dm.init\", \n                    cond: (context) => grammar3[\"count\"] > 2, \n                    actions:assign((context) => { grammar3[\"count\"]=0})}]\n            },\n            states: {        \n                prompt: {\n                entry: say(\"What would you like to do?\"),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            hist: {type: \"history\"},\n\n            maxspeech: {\n                ...speech(\"Please respond. What would you like to do?\")\n        },  \n            ask: {\n                entry: [listen(), send('MAXSPEECH', {delay: 2500})]\n            }\n        }   \n    }, \n    \n        help1:{\n            ...help(\"Tell me what you want to do.\", \"welcome\")\n        },\n\t\tquery: {\n            invoke: {\n                id: \"rasa\",\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: \"menu\",\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    //actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n\n                },\n                onError: {\n                    target: \"welcome\",\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n      \n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: \"todo\", cond: (context) => context.option === \"todo\" },\n                    { target: \"timer\", cond: (context) => context.option === \"timer\" },\n                    { target: \"appointment\", cond: (context) => context.option === \"appointment\" }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. You chose ${context.option}.`\n                    })),\n        },\n                 nomatch: {\n                    entry: say(\"Sorry, please repeat again.\"),\n                    on: { ENDSPEECH: \"prompt\" }\n        } \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create an appointment`\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: [assign((context) => { return { person: grammar[context.recResult].person } }),assign((context) => { grammar3[\"count\"]=0}), cancel(\"maxsp\")],\n                    target: \"day\"\n\n                },\n\n                { target: \".nomatch\" ,\n                 cond: (context) => !(context.recResult in commands),\n                 actions: cancel(\"maxsp\")},\n\n                 {target: \"help2\",\n                 cond: (context) => context.recResult in commands, actions: cancel(\"maxsp\")}],\n                 \n                 MAXSPEECH: [{target:\".maxspeech\",\n                 cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                hist: {type: \"history\"},\n                ask: {\n                    entry: [listen(), send('MAXSPEECH', {delay: 2500, id: \"maxsp\"})]\n                },\n                maxspeech: {\n                    ...speech(\"Please respond, Who are you meeting with?\")\n                },\n                nomatch: {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH:  \"prompt\" }\n                \n                }\n             }\n        },\n        help2:{\n            ...help(\"Please tell me the name of the person you are meeting with.\",\"who\")\n        },\n\n        day: {\n            initial: \"prompt\",\n            on: {\n\t            RECOGNISED: [{\n\t                cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n\t\t             actions: [assign((context) => { return { day: grammar[context.recResult].day } }),assign((context) => { grammar3[\"count\"]=0}),cancel(\"maxsp\")],\n\t\t            target: \"wholeday\"\n\n\t\t        },\t\n\t\t        { target: \".nomatch\" ,\n                cond: (context) => !(context.recResult in commands),\n                actions: cancel(\"maxsp\")},\n                {target: \"help3\",\n                cond: (context) => context.recResult in commands, actions: cancel(\"maxsp\")}],\n                MAXSPEECH: [{target:\".maxspeech\",\n                cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t        },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. You are meeting ${context.person} for the meeting. On which day is your meeting?`\n                    })),\n\t\t            on: { ENDSPEECH: \"ask\" }\n                },\n                hist: {type: \"history\"},\n\t\t        ask: {\n\t\t            entry: [listen(), send('MAXSPEECH', {delay: 2500, id: \"maxsp\"})]\n\t            },\n                maxspeech: {\n                 ...speech(\"Please respond. Which day is your meeting?\")\n              },\n\t\t        nomatch: {\n\t\t            entry: say(\"Sorry I don't know which day are you talking about\"),\n\t\t            on: { ENDSPEECH: \"prompt\" }\n\t            }\t     \n            }\n        },\n        help3:{\n            ...help(\"Please tell me which day your meeting is.\",\"day\")\n        },\n        \n\t    wholeday: {\n\t\t        initial: \"prompt\",\n\t\t        on: {\n\t                RECOGNISED: [{\n\t\t\t            cond: (context) => grammar2[context.recResult] === true,\n                        target: \"notime\",\n                        actions: [assign((context) => { grammar3[\"count\"]=0}),cancel(\"maxsp\")]},\n\t\t\t\t\t\t{\n\t\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\t\ttarget: \"whattime\",\n                        actions: [assign((context) => { grammar3[\"count\"]=0}),cancel(\"maxsp\")]\n\n\t\t            },\n\n\t                { target: \".nomatch\",\n                    cond: (context) => !(context.recResult in commands),\n                    actions: cancel(\"maxsp\")},\n                    {target: \"help4\",\n                    cond: (context) => context.recResult in commands, actions: cancel(\"maxsp\")}],\n                    MAXSPEECH: [{target:\".maxspeech\",\n                    cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t\t        },\n\t\t        states: {\n\t\t            prompt: {\n\t\t\t            entry: send((context) => ({\n\t\t\t                type: \"SPEAK\",\n\t\t\t\t\t\t    value: `Good.on ${context.day}. Will it take the whole day?`\n\t\t\t            })),\n\t\t\t            on: { ENDSPEECH: \"ask\" }\n\t\t            },\n                    hist: {type: \"history\"},\n\t\t            ask: {\n\t\t                entry: [listen(), send('MAXSPEECH', {delay: 2500, id: \"maxsp\"})]\n\t\t            },\n                    maxspeech: {\n                      ...speech(\"Please respond.\")\n                    },\n\t\t            nomatch: {\n\t\t\t            entry: say(\"Please answer the question.\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t            }\n\t\t        }\t     \n            },\n            help4:{\n                ...help(\"Please answer the question with yer or no.\",\"wholeday\")\n            },\n            notime: {\n\t\t           initial: \"prompt\",\n\t               on: {\n\t\t               RECOGNISED: [{ \n\t\t\t               cond: (context) => grammar2[context.recResult] === true,\n\t\t\t               target: \"Finished\",\n                           actions: [assign((context) => { grammar3[\"count\"]=0}),cancel(\"maxsp\")]},\n\n\t\t\t\t\t\t   {\n\t\t\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n                           target: \"who\",\n                           actions: [assign((context) => { grammar3[\"count\"]=0}),cancel(\"maxsp\")]\n\t\t\t\t\t\t   \n\t\t                },\n\n\t\t                { target: \".nomatch\",\n                        cond: (context) => !(context.recResult in commands),\n                        actions: cancel(\"maxsp\")},\n                        {target: \"help5\",\n                        cond: (context) => context.recResult in commands, actions: cancel(\"maxsp\")}],\n                        MAXSPEECH: [{target:\".maxspeech\",\n                        cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}]  \n\t\t            },\n\t\t            states: {\n\t\t                prompt: {\n\t\t\t                entry: send((context) => ({\n\t\t\t                    type: \"SPEAK\",\n\t\t\t\t\t\t\t\tvalue: `Good. Do you want to me create an appointment with ${context.person} on ${context.day}for the whole day?`\n                            })),\n                            on: { ENDSPEECH: \"ask\" }\n\t\t                },\n                        hist: {type: \"history\"},\n\t\t                ask: {\n\t\t\t                entry: [listen(), send('MAXSPEECH', {delay: 2500, id: \"maxsp\"})]\n\t\t                },\n                        maxspeech: {\n                             ...speech(\"Please respond. Confirm the meeting schedule.\")},\n\t\t                nomatch: {\n\t\t\t                entry: say(\"Please repeat it again\"),\n\t\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t                }\n                    }\n\t            },\n                help5:{\n                    ...help(\"Just confirm it\",\"notime\")\n                },\n\t\t\t\twhattime: {\n\t\t\t\t\tinitial: \"prompt\",\n\t\t\t\t\ton: {\n\t\t\t\t\t\tRECOGNISED: [{\n\t\t\t\t\t\t\tcond: (context) => \"time\" in (grammar[context.recResult] || {}),\n\t\t\t\t\t\t\tactions: [assign((context) => { return { time: grammar[context.recResult].time } }),assign((context) => { grammar3[\"count\"]=0})],\n\t\t\t\t\t\t\ttarget: \"withtime\"\n\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ target: \".nomatch\" ,\n                        cond: (context) => !(context.recResult in commands),\n                        actions: cancel(\"maxsp\")},\n                        {target: \"help6\",\n                        cond: (context) => context.recResult in commands, actions: cancel(\"maxsp\")}],\n                        MAXSPEECH: [{target:\".maxspeech\",\n                        cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}]  \n\t\t\t\t\t},\n\t\t\t\t\tstates: {\n\t\t\t\t\t\tprompt: { entry: say(\"What time is your meeting\"),\n\t\t\t\t\t\ton: { ENDSPEECH: \"ask\" }\n\t\t\t\t\t},\n                    hist: {type: \"history\"},\n\t\t\t\t\task: {\n\t\t\t\t\t\tentry: [listen(), send('MAXSPEECH', {delay: 2500, id: \"maxsp\"})]\n\t\t\t\t},\n                maxspeech: {\n                  ...speech(\"Please respond. What time is your meeting?\")\n                },\n\t\t\t\tnomatch: {\n\t\t\t\t\tentry: say(\"Please repeat it again\"),\n\t\t\t\t\ton: { ENDSPEECH: \"prompt\" }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n        help6:{\n            ...help(\"Please tell me what time your meeting is.\",\"whattime\")\n        },\n        \n\t\twithtime: {\n\t\t\tinitial: \"prompt\",\n\t\t\ton: {\n\t\t\t\tRECOGNISED: [{ \n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === true,\n\t\t\t\t\ttarget: \"Finished\",\n                    actions: assign((context) => { grammar3[\"count\"]=0})},\n\t\t\t\t\t{\n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\ttarget: \"who\",\n                    actions: [assign((context) => { grammar3[\"count\"]=0}),cancel(\"maxsp\")]\n\n\t\t\t\t },\n\t\t\t\t { target: \".nomatch\",\n                 cond: (context) => !(context.recResult in commands),\n                 actions: cancel(\"maxsp\")},\n                 {target: \"help7\",\n                 cond: (context) => context.recResult in commands, actions: cancel(\"maxsp\")}],\n                 MAXSPEECH: [{target:\".maxspeech\",\n                 cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t\t\t },\n\t\t\t states: {\n\t\t\t\t prompt: {\n\t\t\t\t\t entry: send((context) => ({\n\t\t\t\t\t\t type: \"SPEAK\",\n\t\t\t\t\t\t value: `Good. Do you want to me create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n\t\t\t\t\t })),\n\t\t\t\t\t on: { ENDSPEECH: \"ask\" }\n\t\t\t\t },\n                 hist: {type: \"history\"},\n\t\t\t\t ask: {\n\t\t\t\t\t entry: [listen(), send('MAXSPEECH', {delay: 2500, id: \"maxsp\"})]\n\t\t\t\t },\n                maxspeech: {\n                 ...speech(\"Please confirm the meeting schedule.\")\n                },        \n\t\t\t\t nomatch: {\n\t\t\t\t\t entry: say(\"Please repeat it again\"),\n\t\t\t\t\t on: { ENDSPEECH: \"prompt\" }\n\t\t\t\t }\n\t\t\t }\n\t\t},\n        help7:{\n            ...help(\"Please confirm the meeting schedule\",\"withtime\")\n        },\n        \n        Finished: {\n\t\t                 initial: \"prompt\",\n\t\t                 on: { ENDSPEECH: \"init\" },\n\t\t                 states: {\n\t\t\t                 prompt: { entry: say(\"Your appointment has been created!\")\n\t\t                    },\n\t                    }\n\t                }\t    \n                }\n            })\n\n\n\t\t\t/* RASA API\n *  */\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = \"https://appointment--app.herokuapp.com/model/parse\"\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: \"POST\",\n        headers: { \"Origin\": \"http://localhost:3000/react-xstate-colourchanger\" }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n"]},"metadata":{},"sourceType":"module"}