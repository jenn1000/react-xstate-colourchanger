{"ast":null,"code":"import _objectSpread from\"C:/Users/wk789/Documents/school/UU/dialogue/lab5/react-xstate-colourchanger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{send,assign}from\"xstate\";// SRGS parser and example (logs the results to console on page load)\nimport{loadGrammar}from'./runparser';import{parse}from'./chartparser';import{grammar}from'./grammars/dmHome';const gram=loadGrammar(grammar);// const input = \"Please turn the light off\"\n// const prs = parse(input.split(/\\s+/), gram)\n// const result = prs.resultsForRule(gram.$root)[0]\n// console.log(result)\nfunction say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}function parsing(text){return parse(text.split(/\\s+/),gram).resultsForRule(gram.$root)[0];}function promptAndAsk(prompt){return{initial:'prompt',states:{prompt:{entry:say(prompt),on:{ENDSPEECH:'ask'}},ask:{entry:listen()}}};}export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:_objectSpread({on:{RECOGNISED:[{cond:context=>parsing(context.recResult)!==undefined,target:\"returnobject\",actions:assign(context=>{return{option:parsing(context.recResult)};})},{target:\".nomatch\"}]}},promptAndAsk(\"What do you want to do?\")),returnobject:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. the object is \".concat(context.option.homeappliances.object,\" and the action is \").concat(context.option.homeappliances.action,\".\")}))}}}}};","map":{"version":3,"sources":["C:/Users/wk789/Documents/school/UU/dialogue/lab5/react-xstate-colourchanger/src/dmSmartHome.ts"],"names":["send","assign","loadGrammar","parse","grammar","gram","say","text","_context","type","value","listen","parsing","split","resultsForRule","$root","promptAndAsk","prompt","initial","states","entry","on","ENDSPEECH","ask","dmMachine","init","CLICK","welcome","RECOGNISED","cond","context","recResult","undefined","target","actions","option","returnobject","homeappliances","object","action"],"mappings":"iMAAA,OAAwBA,IAAxB,CAAsCC,MAAtC,KAAoD,QAApD,CACA;AACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,KAAT,KAAsB,eAAtB,CACA,OAASC,OAAT,KAAwB,mBAAxB,CAEA,KAAMC,CAAAA,IAAI,CAAGH,WAAW,CAACE,OAAD,CAAxB,CACA;AACA;AACA;AACA;AAGA,QAASE,CAAAA,GAAT,CAAaC,IAAb,CAAyD,CACrD,MAAOP,CAAAA,IAAI,CAAEQ,QAAD,GAA2B,CAAEC,IAAI,CAAE,OAAR,CAAiBC,KAAK,CAAEH,IAAxB,CAA3B,CAAD,CAAX,CACH,CAED,QAASI,CAAAA,MAAT,EAAgD,CAC5C,MAAOX,CAAAA,IAAI,CAAC,QAAD,CAAX,CACH,CAED,QAASY,CAAAA,OAAT,CAAiBL,IAAjB,CAAwE,CACpE,MAAQJ,CAAAA,KAAK,CAACI,IAAI,CAACM,KAAL,CAAW,KAAX,CAAD,CAAoBR,IAApB,CAAL,CAA+BS,cAA/B,CAA8CT,IAAI,CAACU,KAAnD,EAA0D,CAA1D,CAAR,CACH,CAED,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAAgF,CAC5E,MAAQ,CACJC,OAAO,CAAE,QADL,CAEJC,MAAM,CAAE,CACJF,MAAM,CAAE,CACJG,KAAK,CAAEd,GAAG,CAACW,MAAD,CADN,CAEJI,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CAFA,CADJ,CAKJC,GAAG,CAAE,CACDH,KAAK,CAAET,MAAM,EADZ,CALD,CAFJ,CAAR,CAYH,CAGD,MAAO,MAAMa,CAAAA,SAAmD,CAAI,CAChEN,OAAO,CAAE,MADuD,CAEhEC,MAAM,CAAE,CACJM,IAAI,CAAE,CACFJ,EAAE,CAAE,CACAK,KAAK,CAAE,SADP,CADF,CADF,CAMJC,OAAO,gBACHN,EAAE,CAAE,CACAO,UAAU,CAAE,CAAC,CACTC,IAAI,CAAGC,OAAD,EAAalB,OAAO,CAACkB,OAAO,CAACC,SAAT,CAAP,GAA+BC,SADzC,CAETC,MAAM,CAAE,cAFC,CAGTC,OAAO,CAAEjC,MAAM,CAAE6B,OAAD,EAAa,CAAE,MAAO,CAAEK,MAAM,CAAEvB,OAAO,CAACkB,OAAO,CAACC,SAAT,CAAjB,CAAP,CAA+C,CAA/D,CAHN,CAAD,CAKZ,CAACE,MAAM,CAAE,UAAT,CALY,CADZ,CADD,EASIjB,YAAY,CAAC,yBAAD,CAThB,CANH,CAiBJoB,YAAY,CAAE,CACVlB,OAAO,CAAE,QADC,CAEVG,EAAE,CAAE,CAAEC,SAAS,CAAE,MAAb,CAFM,CAGVH,MAAM,CAAE,CACJF,MAAM,CAAE,CACJG,KAAK,CAAEpB,IAAI,CAAE8B,OAAD,GAAc,CACtBrB,IAAI,CAAE,OADgB,CAEtBC,KAAK,6BAAuBoB,OAAO,CAACK,MAAR,CAAeE,cAAf,CAA8BC,MAArD,+BAAiFR,OAAO,CAACK,MAAR,CAAeE,cAAf,CAA8BE,MAA/G,KAFiB,CAAd,CAAD,CADP,CADJ,CAHE,CAjBV,CAFwD,CAA7D","sourcesContent":["import { MachineConfig, send, Action, assign } from \"xstate\";\n// SRGS parser and example (logs the results to console on page load)\nimport { loadGrammar } from './runparser'\nimport { parse } from './chartparser'\nimport { grammar } from './grammars/dmHome'\n\nconst gram = loadGrammar(grammar)\n// const input = \"Please turn the light off\"\n// const prs = parse(input.split(/\\s+/), gram)\n// const result = prs.resultsForRule(gram.$root)[0]\n// console.log(result)\n\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nfunction parsing(text:string): MachineConfig<SDSContext, any, SDSEvent> {\n    return (parse(text.split(/\\s+/), gram).resultsForRule(gram.$root)[0])\n}\n\nfunction promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: 'ask' }\n            },\n            ask: {\n                entry: listen(),\n            },\n        }\n    })\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n        welcome: {\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => parsing(context.recResult) !== undefined,\n                    target: \"returnobject\",\n                    actions: assign((context) => { return { option: parsing(context.recResult) } }),\n                },\n                {target: \".nomatch\" }]    \n            },\n                ...promptAndAsk(\"What do you want to do?\")\n        },\n        returnobject: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. the object is ${context.option.homeappliances.object} and the action is ${context.option.homeappliances.action}.`\n                    }))\n                },\n            }\n        },\n        \n    }\n})\n"]},"metadata":{},"sourceType":"module"}