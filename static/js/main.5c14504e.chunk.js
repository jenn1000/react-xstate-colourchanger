(this["webpackJsonpxstate-react-typescript-template"]=this["webpackJsonpxstate-react-typescript-template"]||[]).push([[0],{23:function(t,e,o){},40:function(t,e,o){"use strict";o.r(e);var n=o(27),a=o(6),c=(o(23),o(8),o(24)),s=o(20),r=o(2),i=o(44),l=o(43);const p=o(12).a.cancel;function u(t){return Object(r.q)((e=>({type:"SPEAK",value:t})))}function b(){return Object(r.q)("LISTEN")}function m(t,e){return{entry:u(t),on:{ENDSPEECH:e+".hist"}}}function d(t){return{entry:u(t),on:{ENDSPEECH:"ask"}}}const h={Pikachu:{pokemon:"Pikachu"},Slowking:{pokemon:"Slowking"},"Mister Mime":{pokemon:"Mister Mime"},Uppsala:{place:"Uppsala, Sweden"},"G\xf6teborg":{place:"G\xf6teborg, Sweden"},Stockholm:{place:"Stockholm, Sweden"}},E={yes:!0,Yes:!0,"Of course":!0,"of course":!0,okay:!0,Okay:!0,Yup:!0,yup:!0,Ja:!0,ja:!0,No:!1,no:!1,Nej:!1,nej:!1,"No way":!1,"no way":!1},g={count:0},y={attack_count:0,defend_count:0},O={attack:{battle:"Attack"},Attack:{battle:"Attack"}},j={defense:{battle:"Defend"},Defense:{battle:"Defend"},Defend:{battle:"Defend"},defend:{battle:"Defend"}},S={help:"Help",Help:"Help"},k={initial:"init",states:{init:{on:{CLICK:"welcome"}},welcome:{initial:"prompt",on:{RECOGNISED:[{target:"query",cond:t=>!(t.recResult in S),actions:[Object(r.b)((t=>({option:t.recResult}))),Object(r.b)((t=>{g.count=0})),p("maxsp")]},{target:"welcome_help",cond:t=>t.recResult in S}],MAXSPEECH:[{target:".maxspeech",cond:t=>g.count<=2,actions:Object(r.b)((t=>{g.count=g.count+1}))},{target:"#root.dm.init",cond:t=>g.count>2,actions:Object(r.b)((t=>{g.count=0}))}]},states:{prompt:{entry:u("Welcome to the world of Pokemon. Select your level. Easy or hard."),on:{ENDSPEECH:"ask"}},hist:{type:"history"},maxspeech:Object(a.a)({},d("Please, respond by selecting a level.")),ask:{entry:[b(),Object(r.q)("MAXSPEECH",{delay:6e3})]}}},welcome_help:Object(a.a)({},m("This is Pokemon. Please, select your level.","welcome")),query:{invoke:{id:"rasa",src:(t,e)=>P(t.option),onDone:{target:"menu",actions:[Object(r.b)(((t,e)=>({option:e.data.intent.name}))),(t,e)=>console.log(e.data),p("maxsp")]},onError:{target:"welcome",actions:[(t,e)=>console.log(e.data),p("maxsp")]}}},menu:{initial:"prompt",on:{ENDSPEECH:[{target:"level_easy",cond:t=>"level_easy"===t.option},{target:"level_hard",cond:t=>"level_hard"===t.option}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"You chose ".concat(t.option,". Great choice.")})))},nomatch:{entry:u("Sorry, please repeat again."),on:{ENDSPEECH:"prompt"}}}},level_hard:{initial:"prompt",on:{ENDSPEECH:"pokemon"},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Time to get a pokemon."})))}}},level_easy:{initial:"prompt",on:{ENDSPEECH:"pokemon"},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Time to get a pokemon."})))}}},pokemon:{initial:"prompt",on:{RECOGNISED:[{target:"place",cond:t=>"pokemon"in(h[t.recResult]||{}),actions:[Object(r.b)((t=>({pokemon:h[t.recResult].pokemon}))),Object(r.b)((t=>{g.count=0})),p("maxsp")]},{target:".nomatch",cond:t=>!(t.recResult in S),actions:p("maxsp")},{target:"pokemon_help",cond:t=>t.recResult in S}],MAXSPEECH:[{target:".maxspeech",cond:t=>g.count<=2,actions:Object(r.b)((t=>{g.count=g.count+1}))},{target:"#root.dm.init",cond:t=>g.count>2,actions:Object(r.b)((t=>{g.count=0}))}]},states:{prompt:{entry:u("Which Pokemon do you want?"),on:{ENDSPEECH:"ask"}},hist:{type:"history"},ask:{entry:[b(),Object(r.q)("MAXSPEECH",{delay:6e3,id:"maxsp"})]},maxspeech:Object(a.a)({},d("Please respond, which pokemon do you want?")),nomatch:{entry:u("Sorry, I don't know that Pokemon."),on:{ENDSPEECH:"prompt"}}}},pokemon_help:Object(a.a)({},m("Please, tell me the name of the pokemon you want.","pokemon")),place:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"place"in(h[t.recResult]||{}),actions:[Object(r.b)((t=>({place:h[t.recResult].place}))),Object(r.b)((t=>{g.count=0})),p("maxsp")],target:"fight"},{target:".nomatch",cond:t=>!(t.recResult in S),actions:p("maxsp")},{target:"place_help",cond:t=>t.recResult in S}],MAXSPEECH:[{target:".maxspeech",cond:t=>g.count<=2,actions:Object(r.b)((t=>{g.count=g.count+1}))},{target:"#root.dm.init",cond:t=>g.count>2,actions:Object(r.b)((t=>{g.count=0}))}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"Excellent! ".concat(t.pokemon," is your pokemon now. What region do you want to go to?")}))),on:{ENDSPEECH:"ask"}},hist:{type:"history"},ask:{entry:[b(),Object(r.q)("MAXSPEECH",{delay:6e3,id:"maxsp"})]},maxspeech:Object(a.a)({},d("Please, respond. Which region do you want to go to?")),nomatch:{entry:u("Sorry, I don't know which region or place you are talking about."),on:{ENDSPEECH:"prompt"}}}},place_help:Object(a.a)({},m("Please, tell me where you want to go.","place")),fight:{initial:"prompt",on:{RECOGNISED:[{cond:(t=>!0===E[t.recResult])&&(t=>"level_easy"===t.option),target:"battle1",actions:[Object(r.b)((t=>{g.count=0})),p("maxsp")]},{cond:(t=>!0===E[t.recResult])&&(t=>"level_hard"===t.option),target:"battle2",actions:[Object(r.b)((t=>{g.count=0})),p("maxsp")]},{cond:t=>!1===E[t.recResult],target:"place",actions:[Object(r.b)((t=>{g.count=0})),p("maxsp")]},{target:".nomatch",cond:t=>!(t.recResult in S),actions:p("maxsp")},{target:"fight_easy_help",cond:t=>t.recResult in S}],MAXSPEECH:[{target:".maxspeech",cond:t=>g.count<=2,actions:Object(r.b)((t=>{g.count=g.count+1}))},{target:"#root.dm.init",cond:t=>g.count>2,actions:Object(r.b)((t=>{g.count=0}))}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:"".concat(t.place," is full of wild Pokemon! Do you want to try and catch a Pokemon?")}))),on:{ENDSPEECH:"ask"}},hist:{type:"history"},ask:{entry:[b(),Object(r.q)("MAXSPEECH",{delay:6e3,id:"maxsp"})]},maxspeech:Object(a.a)({},d("Please, respond.")),nomatch:{entry:u("Please, answer the question."),on:{ENDSPEECH:"prompt"}}}},fight_easy_help:Object(a.a)({},m("Please, answer the question with yes or no.","fight")),battle1:{initial:"prompt",on:{RECOGNISED:[{cond:t=>y.attack_count>1,target:"win",actions:[Object(r.b)((t=>{g.count=0})),p("maxsp")]},{cond:t=>y.defend_count>1,target:"lose",actions:[Object(r.b)((t=>{g.count=0})),p("maxsp")]},{cond:t=>"battle"in(O[t.recResult]||{}),target:"battle1",actions:[Object(r.b)((t=>{y.attack_count=y.attack_count+1})),p("maxsp")]},{cond:t=>"battle"in(j[t.recResult]||{}),target:"battle1",actions:[Object(r.b)((t=>{y.defend_count=y.defend_count+1})),p("maxsp")]},{target:".nomatch",cond:t=>!(t.recResult in S),actions:p("maxsp")},{target:"battle1_help",cond:t=>t.recResult in S}],MAXSPEECH:[{target:".maxspeech",cond:t=>g.count<=2,actions:Object(r.b)((t=>{g.count=g.count+1}))},{target:"#root.dm.init",cond:t=>g.count>2,actions:Object(r.b)((t=>{g.count=0}))}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:" Let's fight! Do you want to attack or defend?."}))),on:{ENDSPEECH:"ask"}},hist:{type:"history"},ask:{entry:[b(),Object(r.q)("MAXSPEECH",{delay:6e3,id:"maxsp"})]},maxspeech:Object(a.a)({},d("Please, respond or lose all chances of capturing this Pokemon. Attack or defend?")),nomatch:{entry:u("Please, repeat it again."),on:{ENDSPEECH:"prompt"}}}},battle1_help:Object(a.a)({},m("Select your action! Attack or defend!","battle1")),battle2:{initial:"prompt",on:{RECOGNISED:[{cond:t=>y.attack_count>=2,target:"lose",actions:[Object(r.b)((t=>{g.count=0})),p("maxsp")]},{cond:t=>y.defend_count>=3,target:"win",actions:[Object(r.b)((t=>{g.count=0})),p("maxsp")]},{cond:t=>"battle"in(O[t.recResult]||{}),target:"battle2",actions:[Object(r.b)((t=>{y.attack_count=y.attack_count+1})),p("maxsp")]},{cond:t=>"battle"in(j[t.recResult]||{}),target:"battle2",actions:[Object(r.b)((t=>{y.defend_count=y.defend_count+1})),p("maxsp")]},{target:".nomatch",cond:t=>!(t.recResult in S),actions:p("maxsp")},{target:"battle2_help",cond:t=>t.recResult in S}],MAXSPEECH:[{target:".maxspeech",cond:t=>g.count<=2,actions:Object(r.b)((t=>{g.count=g.count+1}))},{target:"#root.dm.init",cond:t=>g.count>2,actions:Object(r.b)((t=>{g.count=0}))}]},states:{prompt:{entry:Object(r.q)((t=>({type:"SPEAK",value:" Let's fight! Do you want to attack or defend?."}))),on:{ENDSPEECH:"ask"}},hist:{type:"history"},ask:{entry:[b(),Object(r.q)("MAXSPEECH",{delay:6e3,id:"maxsp"})]},maxspeech:Object(a.a)({},d("Please, respond or lose all chances of capturing this Pokemon. Attack or defend?")),nomatch:{entry:u("Please, repeat it again."),on:{ENDSPEECH:"prompt"}}}},battle2_help:Object(a.a)({},m("Select your action! Attack or defend!","battle2")),lose:{initial:"prompt",on:{ENDSPEECH:"init"},states:{prompt:{entry:u("You lost! Failed to catch the wild Pokemon!")}}},win:{initial:"prompt",on:{ENDSPEECH:"init"},states:{prompt:{entry:u("Congratualtions, you caught a wild Pokemon!")}}}}},P=t=>fetch(new Request("https://cors-anywhere.herokuapp.com/https://appointment--app.herokuapp.com/model/parse",{method:"POST",headers:{Origin:"http://localhost:3000/react-xstate-colourchanger"},body:'{"text": "'.concat(t,'"}')})).then((t=>t.json()));var x=o(22),C=o(13);Object(l.a)({url:"https://statecharts.io/inspect",iframe:!1});const R=Object(s.a)({id:"root",type:"parallel",states:{dm:Object(a.a)({},k),asrtts:{initial:"idle",states:{idle:{on:{LISTEN:"recognising",SPEAK:{target:"speaking",actions:Object(r.b)(((t,e)=>({ttsAgenda:e.value})))}}},recognising:{initial:"progress",entry:"recStart",exit:"recStop",on:{ASRRESULT:{actions:["recLogResult",Object(r.b)(((t,e)=>({recResult:e.value})))],target:".match"},RECOGNISED:"idle",MAXSPEECH:"idle"},states:{progress:{},match:{entry:Object(r.q)("RECOGNISED")}}},speaking:{entry:"ttsStart",on:{ENDSPEECH:"idle"}}}}}},{actions:{recLogResult:t=>{console.log("<< ASR: "+t.recResult)},test:()=>{console.log("test")},logIntent:t=>{console.log("<< NLU intent: "+t.nluData.intent.name)}}}),f=t=>{switch(!0){case t.state.matches({asrtts:"recognising"}):return Object(C.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover",style:{animation:"glowing 20s linear"}},t),{},{children:"Listening..."}));case t.state.matches({asrtts:"speaking"}):return Object(C.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover",style:{animation:"bordering 1s infinite"}},t),{},{children:"Speaking..."}));default:return Object(C.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover"},t),{},{children:"Begin Battle"}))}};function w(){const t=Object(x.useSpeechSynthesis)({onEnd:()=>{u("ENDSPEECH")}}),e=t.speak,o=t.cancel,a=(t.speaking,Object(x.useSpeechRecognition)({onResult:t=>{u({type:"ASRRESULT",value:t})}})),c=a.listen,s=(a.listening,a.stop),r=Object(i.b)(R,{devTools:!0,actions:{recStart:Object(i.a)((()=>{console.log("Ready to receive a color command."),c({interimResults:!1,continuous:!0})})),recStop:Object(i.a)((()=>{console.log("Recognition stopped."),s()})),changeColour:Object(i.a)((t=>{console.log("Repainting..."),document.body.style.background=t.recResult})),ttsStart:Object(i.a)(((t,o)=>{console.log("Speaking..."),e({text:t.ttsAgenda})})),ttsCancel:Object(i.a)(((t,e)=>{console.log("TTS STOP..."),o()}))}}),l=Object(n.a)(r,3),p=l[0],u=l[1];l[2];return Object(C.jsx)("div",{className:"App",children:Object(C.jsx)(f,{state:p,onClick:()=>u("CLICK")})})}const D=document.getElementById("root");c.render(Object(C.jsx)(w,{}),D)}},[[40,1,2]]]);
//# sourceMappingURL=main.5c14504e.chunk.js.map